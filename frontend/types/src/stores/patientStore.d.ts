import type { Patient, PatientFormData, Gender, Center } from '@/api/patientService';
export type { Patient, PatientFormData, Gender, Center } from '@/api/patientService';
export declare const usePatientStore: import("pinia").StoreDefinition<"patient", import("pinia")._UnwrapAll<Pick<{
    patients: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[], Patient[] | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    currentPatient: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null, Patient | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null>;
    genders: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[], Gender[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[]>;
    centers: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[], Center[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    patientCount: import("vue").ComputedRef<number>;
    patientsWithAge: import("vue").ComputedRef<{
        age: number | null;
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    fetchPatients: (apiClient?: any) => Promise<void>;
    fetchGenders: (apiClient?: any) => Promise<void>;
    fetchCenters: (apiClient?: any) => Promise<void>;
    loadGenders: () => Promise<void>;
    loadCenters: () => Promise<void>;
    initializeLookupData: () => Promise<void>;
    createPatient: (apiClient: any, patientData: PatientFormData) => Promise<any>;
    updatePatient: (apiClient: any, id: number, patientData: PatientFormData) => Promise<any>;
    deletePatient: (id: number) => Promise<void>;
    clearError: () => void;
    calculatePatientAge: (dobString: string) => number | null;
    getGenderDisplayName: (genderName: string | null | undefined) => string;
    getCenterDisplayName: (centerName: string | null | undefined) => string;
    validatePatientForm: (formData: PatientFormData) => {
        isValid: boolean;
        errors: string[];
    };
    formatPatientForSubmission: (formData: PatientFormData) => PatientFormData;
}, "loading" | "error" | "centers" | "patients" | "currentPatient" | "genders">>, Pick<{
    patients: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[], Patient[] | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    currentPatient: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null, Patient | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null>;
    genders: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[], Gender[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[]>;
    centers: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[], Center[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    patientCount: import("vue").ComputedRef<number>;
    patientsWithAge: import("vue").ComputedRef<{
        age: number | null;
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    fetchPatients: (apiClient?: any) => Promise<void>;
    fetchGenders: (apiClient?: any) => Promise<void>;
    fetchCenters: (apiClient?: any) => Promise<void>;
    loadGenders: () => Promise<void>;
    loadCenters: () => Promise<void>;
    initializeLookupData: () => Promise<void>;
    createPatient: (apiClient: any, patientData: PatientFormData) => Promise<any>;
    updatePatient: (apiClient: any, id: number, patientData: PatientFormData) => Promise<any>;
    deletePatient: (id: number) => Promise<void>;
    clearError: () => void;
    calculatePatientAge: (dobString: string) => number | null;
    getGenderDisplayName: (genderName: string | null | undefined) => string;
    getCenterDisplayName: (centerName: string | null | undefined) => string;
    validatePatientForm: (formData: PatientFormData) => {
        isValid: boolean;
        errors: string[];
    };
    formatPatientForSubmission: (formData: PatientFormData) => PatientFormData;
}, "patientCount" | "patientsWithAge">, Pick<{
    patients: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[], Patient[] | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    currentPatient: import("vue").Ref<{
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null, Patient | {
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        age?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    } | null>;
    genders: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[], Gender[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        abbreviation?: string | undefined;
        description?: string | undefined;
    }[]>;
    centers: import("vue").Ref<{
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[], Center[] | {
        id: number;
        name: string;
        name_de?: string | undefined;
        name_en?: string | undefined;
        description?: string | undefined;
    }[]>;
    loading: import("vue").Ref<boolean, boolean>;
    error: import("vue").Ref<string | null, string | null>;
    patientCount: import("vue").ComputedRef<number>;
    patientsWithAge: import("vue").ComputedRef<{
        age: number | null;
        id?: number | undefined;
        first_name: string;
        last_name: string;
        dob?: string | null | undefined;
        gender?: string | null | undefined;
        center?: string | null | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        patient_hash?: string | null | undefined;
        comments?: string | undefined;
        is_real_person?: boolean | undefined;
        pseudonym_first_name?: string | null | undefined;
        pseudonym_last_name?: string | null | undefined;
        sensitive_meta_id?: number | null | undefined;
        created_at?: string | undefined;
        updated_at?: string | undefined;
    }[]>;
    fetchPatients: (apiClient?: any) => Promise<void>;
    fetchGenders: (apiClient?: any) => Promise<void>;
    fetchCenters: (apiClient?: any) => Promise<void>;
    loadGenders: () => Promise<void>;
    loadCenters: () => Promise<void>;
    initializeLookupData: () => Promise<void>;
    createPatient: (apiClient: any, patientData: PatientFormData) => Promise<any>;
    updatePatient: (apiClient: any, id: number, patientData: PatientFormData) => Promise<any>;
    deletePatient: (id: number) => Promise<void>;
    clearError: () => void;
    calculatePatientAge: (dobString: string) => number | null;
    getGenderDisplayName: (genderName: string | null | undefined) => string;
    getCenterDisplayName: (centerName: string | null | undefined) => string;
    validatePatientForm: (formData: PatientFormData) => {
        isValid: boolean;
        errors: string[];
    };
    formatPatientForSubmission: (formData: PatientFormData) => PatientFormData;
}, "clearError" | "deletePatient" | "loadCenters" | "fetchPatients" | "fetchGenders" | "fetchCenters" | "loadGenders" | "initializeLookupData" | "createPatient" | "updatePatient" | "calculatePatientAge" | "getGenderDisplayName" | "getCenterDisplayName" | "validatePatientForm" | "formatPatientForSubmission">>;
