const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./annotationStore.js","./main.js","./main.css","./authStore.js"])))=>i.map(i=>d[i]);
import{M as Me,h as _,J as Le,e as S,P as $,z as p,A as v,Q as q,R as G,g as Oe}from"./main.js";const Re={appendix:"Appendix",blood:"Blut",diverticule:"Divertikel",grasper:"Greifer",ileocaecalvalve:"Ileozäkalklappe",ileum:"Ileum",low_quality:"Niedrige Bildqualität",nbi:"Narrow Band Imaging",needle:"Nadel",outside:"Außerhalb",polyp:"Polyp",snare:"Snare",water_jet:"Wasserstrahl",wound:"Wunde"};function D(a){return Re[a]??a}const je={outside:"#e74c3c",polyp:"#f39c12",needle:"#3498db",blood:"#e74c3c",snare:"#9b59b6",grasper:"#2ecc71",water_jet:"#1abc9c",appendix:"#f1c40f",ileum:"#e67e22",diverticule:"#34495e",ileocaecalvalve:"#95a5a6",nbi:"#8e44ad",low_quality:"#7f8c8d",wound:"#c0392b"};function M(a){return je[a]??"#95a5a6"}const E=a=>{if(!a||a<0)return"00:00";const l=Math.floor(a/60),b=Math.floor(a%60);return`${l.toString().padStart(2,"0")}:${b.toString().padStart(2,"0")}`};function xe(a){return a.replace(/[A-Z]/g,l=>`_${l.toLowerCase()}`)}function L(a){if(!a||typeof a!="object")return a;const l={};for(const[b,s]of Object.entries(a)){const m=xe(b);s&&typeof s=="object"&&!Array.isArray(s)?l[m]=L(s):Array.isArray(s)?l[m]=s.map(h=>h&&typeof h=="object"?L(h):h):l[m]=s}return l}function Q(a){let l="";a.labelName?l=a.labelName:(console.warn("ISSUE WITH SNAKE CASE CAMEL CASE CONVERSION IN AXIOS INTERCEPTOR: Backend segment label is missing or in unexpected format:",a),l=a.labelName||"");const b={id:a.id,startFrameNumber:a.startFrameNumber,endFrameNumber:a.endFrameNumber,label:l,startTime:a.startTime,endTime:a.endTime,usingFPS:!1};return a.startTime!==void 0&&(b.usingFPS=!0),b}function H(a){return a.map(Q)}function qe(a){let l="";return a.label_name?l=a.label_name:a.label&&typeof a.label=="object"&&a.label.name?l=a.label.name:a.label&&typeof a.label=="string"?l=a.label:l="",{id:a.id,label:l,startTime:a.startTime??a.start_time??a.segmentStart??a.segment_start??0,endTime:a.endTime??a.end_time??a.segmentEnd??a.segment_end??0,startFrameNumber:a.startFrameNumber??a.start_frame_number??0,endFrameNumber:a.endFrameNumber??a.end_frame_number??0,videoName:a.videoName||a.video_name||"",usingFPS:a.usingFPS??a.using_fps??!1}}function ze(a,l,b,s){const m={start_time:l,end_time:b,label_name:s?.label||s?.label_name,...s};return L(m)}const ke=_([]),Be={},Ke=1/50,J=5,Ge=Me("video",()=>{const a=_(null),l=_(""),b=_(""),s=Le({...Be}),m=_({videos:[],labels:[]}),h=_(null),O=_(null),F=_(0),i=_(null);_(null);const w=_(null);function N(e){return`${window.location.origin}/api/media/videos/${e}/`}const X=S(()=>i.value?{...i.value,start:i.value.startTime,end:i.value.endTime}:null),Z=S(()=>!!a.value),I=S(()=>h.value?.duration?h.value.duration:0),Y=S(()=>a.value?.segments||[]),ee=S(()=>m.value?.labels||[]),A=S(()=>{const e={};return m.value.labels.forEach(t=>e[t.name]=t.id),e});function R(e){return{...e,labelID:e.labelID??A.value[e.label]??null}}const V=S(()=>{const e=[...a.value?.segments||[]];if(i.value){const t={id:i.value.id,label:i.value.label,startTime:i.value.startTime,endTime:i.value.endTime||i.value.startTime,avgConfidence:0};e.push(t)}return e}),te=S(()=>V.value.map(e=>({id:e.id,label:D(e.label),startTime:e.startTime,endTime:e.endTime,display:`${D(e.label)}: ${E(e.startTime)} – ${E(e.endTime)}`}))),ae=S(()=>V.value.find(e=>e.id===O.value)||null);async function ne(e){if(e||(e=a.value?.id||null),!e)return console.error(`Invalid video ID: ${e}`),!1;try{return await p.delete(`/api/media-management/${e}/force-remove/`),!0}catch(t){return console.error(`Failed to delete video ${e}:`,t),!1}}function oe(e,t){const o=A.value[t]??null;let r=1;if(e.frames&&Object.keys(e.frames).length>0){const n=Object.keys(e.frames).map(Number),d=e.segment_start,c=e.segment_end,y=n.filter(f=>f>=d&&f<=c);if(y.length>0){let f=0,u=0;y.forEach(T=>{const g=e.frames[T.toString()];g?.predictions?.confidence!==void 0&&(f+=g.predictions.confidence,u++)}),u>0?(r=f/u,console.log(`Segment ${e.segment_id}: Calculated avg confidence ${r.toFixed(3)} from ${u} frame predictions (frames ${d}-${c})`)):console.warn(`Segment ${e.segment_id}: No valid predictions found in frames ${d}-${c}`)}else console.warn(`Segment ${e.segment_id}: No frames found within segment boundaries ${d}-${c}`)}else console.warn(`Segment ${e.segment_id}: No frame data available for confidence calculation`);return{id:e.segment_id,label:t,startTime:e.start_time,endTime:e.end_time,avgConfidence:r,labelID:o,startFrameNumber:e.segment_start,endFrameNumber:e.segment_end,frames:e.frames}}function re(e){O.value=e}function se(e,t){t&&e.startTime&&(t.currentTime=e.startTime,t.play().catch(console.error))}function le(e,t){const o=e.startTime/t*100,r=(e.endTime-e.startTime)/t*100;return{left:`${o}%`,width:`${r}%`,backgroundColor:M(e.label)}}function j(e,t){for(const o in s){const r=s[o].findIndex(n=>n.id===e);if(r!==-1){Object.assign(s[o][r],t);break}}}function ie(){return te.value}function de(){Object.keys(s).forEach(e=>{delete s[e]})}async function ce(e){try{const t=e?v(`video/media/${e}`):v("video/sensitivemeta/"),o=await p.get(t);return h.value=o.data,o.data}catch(t){return console.error("Error fetching video meta:",t),null}}async function ue(e){try{return await p.patch(v("media/videos/${payload.id}/"),e),!0}catch(t){return console.error("Error updating sensitive meta:",t),!1}}function me(){h.value=null}function fe(e,t,o){t()}function ve(e,t,o,r,n){r(t.name)}async function x(e){if(console.log(`[VideoStore] fetchAllSegments called with video ID: ${e}`),a.value||(console.log(`[VideoStore] No currentVideo found, creating basic video object for ID: ${e}`),a.value={id:e,isAnnotated:!1,errorMessage:"",segments:[],videoUrl:"",status:"available",assignedUser:null}),await k(e),a.value){const t=[];Object.values(s).forEach(o=>{t.push(...o)}),a.value.segments=t,console.log(`[VideoStore] Timeline segments populated: ${t.length} segments for video ${e}`)}}async function ge(){console.log("Saving annotations...")}async function pe(e){a.value&&(a.value.status=e)}async function be(e){a.value&&(a.value.assignedUser=e)}async function he(){console.log("Fetching all videos...");try{const e=await p.get(v("videos/"));console.log("API Response:",e.data);const t=e.data.videos.map(n=>({id:parseInt(n.id),original_file_name:n.original_file_name,status:n.status||"available",assignedUser:n.assignedUser||null,anonymized:n.anonymized||!1,centerName:n.center_name||"Unbekannt",processorName:n.processor_name||"Unbekannt"})),o=e.data.labels.map(n=>({id:parseInt(n.id),name:n.name,color:n.color||M(n.name)}));console.log("Fetching segments for",t.length,"videos...");const r=await Promise.all(t.map(async n=>{try{const d=await p.get(v(`media/videos/${n.id}/segments/`));console.log(`Video ${n.id}: Found ${d.data.length} segments`);const c=d.data,f=H(c).map(u=>R({id:u.id,label:u.label,startTime:u.startTime,endTime:u.endTime,avgConfidence:1,videoID:parseInt(n.id.toString()),labelID:A.value[u.label]??null}));return{...n,segments:f}}catch(d){return console.warn(`Failed to load segments for video ${n.id}:`,d),{...n,segments:[]}}}));return m.value={videos:r,labels:o},console.log("✅ Processed videos with segments:",m.value),m.value}catch(e){throw console.error("Error loading videos:",e),m.value={videos:[],labels:[]},e}}function ye(){a.value=null}function Se(e){a.value=e}function _e(e){const t=m.value.videos.find(o=>o.id===e)||null;return t?a.value={id:t.id,isAnnotated:!0,errorMessage:"",segments:[],videoUrl:N(t.id)+"?type=processed",status:t.status,assignedUser:t.assignedUser||null}:a.value=null,a.value}async function z(e){try{const t=e||a.value?.id;if(!t){console.warn("No video ID available for fetching video URL"),l.value="No video selected.";return}const o=await p.get(v(`video/${t}/`),{headers:{Accept:"application/json"}});o.data.video_url?(b.value=o.data.video_url,console.log("Fetched video URL:",b.value)):(console.warn("No video URL returned from API response:",o.data),l.value="Video URL not available.")}catch(t){const o=t;console.error("Error loading video URL:",o.response?.data||o.message),l.value="Error loading video URL. Please check the API endpoint or try again later."}}const Te=S(()=>a.value?N(a.value.id)+"?type=processed":"");function $e(){if(!a.value?.id){w.value=null;return}const e=a.value.id;p.get(v(`anonymization/${e}/has-raw/`)).then(t=>{w.value=t.data.has_raw_file,console.log(`Raw video file for ID ${e}:`,w.value)}).catch(t=>{console.error("Error checking raw video file:",t),w.value=null})}async function we(e,t="outside"){try{const o=await p.get(v(`video/${e}/label/${t}/`),{headers:{Accept:"application/json"}});console.log(`[video ${e}] API response for label ${t}:`,o.data);const r=o.data.time_segments.map(n=>oe(n,t));console.log(`[video ${e}] Mapped ${r.length} segments for label ${t}`),s[t]=r,a.value&&(a.value.segments=Object.values(s).flat())}catch(o){const r=o;console.error("Error loading segments for label "+t+":",r.response?.data||r.message),l.value=`Error loading segments for label ${t}. Please check the API endpoint or try again later.`}}async function k(e){const t=++F.value;try{const o=await p.get(v(`media/videos/${e}/segments/`),{headers:{Accept:"application/json"}});if(t!==F.value)return;Object.keys(s).forEach(n=>{delete s[n]}),console.log(`[VideoStore] Loading ${o.data.length} segments for video ${e}`),H(o.data).forEach(n=>{const d=R({id:n.id,label:n.label,startTime:n.startTime,endTime:n.endTime,avgConfidence:1,videoID:e,labelID:A.value[n.label]??null}),c=n.label;s[c]||(s[c]=[]),n.endTime-n.startTime<.1&&console.warn(`⚠️ Very short segment ${n.id}: ${n.endTime-n.startTime}s`),s[c].push(d)}),console.log("[VideoStore] Processed segments by label:",Object.keys(s).map(n=>`${n}: ${s[n].length}`))}catch(o){if(t===F.value){const r=o;console.error("Error loading video segments:",r.response?.data||r.message),l.value="Error loading video segments. Please try again later."}}}async function De(e,t,o,r){try{const n=m.value.labels.find(C=>C.name===t);if(!n)return console.error(`Label ${t} not found in store`),l.value=`Label ${t} nicht gefunden`,null;const d=n.id,c=I.value>0&&h.value?.fps||30,y=Math.floor(o*c),f=Math.floor(r*c),u={video_file:parseInt(e),label:d,start_frame_number:y,end_frame_number:f},T=await p.post(v(`media/videos/${e}/segments/`),u),g={id:T.data.id,label:t,startTime:T.data.start_time,endTime:T.data.end_time,avgConfidence:1,videoID:parseInt(e),labelID:d,startFrameNumber:T.data.start_frame_number,endFrameNumber:T.data.end_frame_number};return s[t]||(s[t]=[]),s[t].push(g),console.log("Created segment:",g),g}catch(n){const d=n;return console.error("Error creating segment:",d.response?.data||d.message),l.value="Error creating segment. Please try again.",null}}async function Ee(e,t){try{console.log(`[VideoStore] Updating segment ${e} with:`,t);const o=ze(e,(t.startTime||t.start_time)??0,(t.endTime||t.end_time)??0,t),r=a.value?.id,n=r?v(`media/videos/${r}/segments/${e}/`):v(`media/videos/segments/${e}/`),d=await p.patch(n,o),c=Q(d.data);return j(e,c),console.log(`[VideoStore] Successfully updated segment ${e}`),!0}catch(o){const r=o;return console.error("Error updating segment:",r.response?.data||r.message),l.value="Error updating segment. Please try again.",!1}}async function Ae(e){try{const t=a.value?.id,o=t?v(`media/videos/${t}/segments/${e}/`):v(`media/videos/segments/${e}/`);await p.delete(o);for(const r in s){const n=s[r].findIndex(d=>d.id===e);if(n!==-1){s[r].splice(n,1);break}}return!0}catch(t){const o=t;return console.error("Error deleting segment:",o.response?.data||o.message),l.value="Error deleting segment. Please try again.",!1}}function Ve(e){const t=Object.keys(s);for(const o of t)s[o]=s[o].filter(r=>r.id!==e)}function B(e,t){console.log(`[Draft] Starting draft: ${e} at ${E(t)}`),i.value={id:`draft-${Date.now()}`,label:e,startTime:t,endTime:null},console.log("[Draft] Created draft segment:",i.value)}function K(e){if(!i.value){console.warn("[Draft] Kein aktiver Draft gefunden zum Aktualisieren.");return}const t=i.value.startTime+Ke,o=Math.max(t,e);i.value.endTime=o,console.log(`[Draft] Draft-Ende aktualisiert: ${E(o)}, Duration: ${o-i.value.startTime}s`)}async function W(){if(console.log("[Draft] commitDraft() called, draftSegment:",i.value),console.log("[Draft] currentVideo:",a.value?.id),!i.value)return console.warn("[Draft] Kein Draft zum Committen gefunden - draftSegment.value ist null/undefined"),null;if(!a.value)return console.warn("[Draft] Kein currentVideo gefunden"),null;const e=i.value;if(e.endTime===null||e.endTime===void 0)return console.error("[Draft] Draft-Ende muss gesetzt sein vor dem Committen. Current endTime:",e.endTime),null;try{const t=m.value.labels.find(g=>g.name===e.label);if(!t)return console.error(`[Draft] Label ${e.label} not found in store`),console.log("[Draft] Available labels:",m.value.labels.map(g=>g.name)),l.value=`Label ${e.label} nicht gefunden`,null;const o=h.value?.fps||30,r=Math.floor(e.startTime*o),n=Math.floor(e.endTime*o),d={video_file:parseInt(a.value.id.toString()),label:t.id,start_frame_number:r,end_frame_number:n};console.log("[Draft] Committing Draft-Segment with payload:",d);const c=a.value?.id;if(!c)return console.error("[Draft] Cannot commit: no current video"),null;const y=await p.post(v(`media/videos/${c}/segments/`),d);console.log("[Draft] API response:",y.data);const f={id:y.data.id,label:e.label,startTime:y.data.start_time,endTime:y.data.end_time,avgConfidence:1,videoID:parseInt(a.value.id.toString()),labelID:t.id,startFrameNumber:y.data.start_frame_number,endFrameNumber:y.data.end_frame_number};a.value?.segments&&(a.value.segments.push(f),console.log("[Draft] Added segment to currentVideo.segments, new count:",a.value.segments.length));const u=e.label;s[u]||(s[u]=[]),s[u].push(f),console.log("[Draft] Added segment to segmentsByLabel["+u+"], new count:",s[u].length);try{const{useAnnotationStore:g}=await q(async()=>{const{useAnnotationStore:P}=await import("./annotationStore.js");return{useAnnotationStore:P}},__vite__mapDeps([0,1,2]),import.meta.url),{useAuthStore:C}=await q(async()=>{const{useAuthStore:P}=await import("./authStore.js");return{useAuthStore:P}},__vite__mapDeps([3,1,2]),import.meta.url),Pe=g(),U=C();U.initMockUser(),U.user?.id?(await Pe.createSegmentAnnotation(a.value.id.toString(),f,U.user.id),console.log(`✅ Created annotation for segment ${f.id}`)):console.warn("No authenticated user found for annotation creation")}catch(g){console.error("Failed to create segment annotation:",g)}const T={...i.value};return i.value=null,console.log("[Draft] Draft erfolgreich committed und gecleared:",T,"-> New segment:",f),f}catch(t){return console.error("[Draft] Fehler beim Committen des Draft-Segments:",t),t instanceof G&&t.response?.data&&console.error("[Draft] Backend error details:",t.response.data),l.value=t instanceof G&&(t.response?.data?.detail||t.message)||"Unbekannter Fehler beim Speichern",null}}function Fe(){if(!i.value){console.warn("[Draft] Kein Draft zum Abbrechen gefunden.");return}console.log("[Draft] Draft abgebrochen:",i.value),i.value=null}async function Ne(e,t){const o=e,r=Math.min(e+J,I.value||e+J);return B(t,o),K(r),await W()}async function Ie(e){if(console.log(`[VideoStore] loadVideo called with ID: ${e}`),!Oe().overview.some(r=>r.id===Number(e)&&r.mediaType==="video"&&r.anonymizationStatus==="done"))throw new Error(`Video ${e} darf nicht annotiert werden, solange die Anonymisierung nicht abgeschlossen ist.`);try{a.value={id:e,isAnnotated:!1,errorMessage:"",segments:[],videoUrl:"",status:"available",assignedUser:null};try{const n=(await p.get(v(`media/videos/${e}/`))).data;console.log("[VideoStore] Got video metadata:",n),a.value={id:n.id||e,videoUrl:n.video_url||"",status:n.status||"available",assignedUser:n.assignedUser||null,isAnnotated:n.isAnnotated||!1,errorMessage:"",segments:[],duration:n.duration,fps:n.fps}}catch(r){console.warn(`[VideoStore] Could not fetch video metadata for ${e}, using basic object:`,r)}await z(e),await x(e),console.log(`[VideoStore] Video ${e} successfully loaded with ${a.value?.segments?.length||0} segments`)}catch(r){const n=r;console.error(`[VideoStore] Error loading video ${e}:`,n.response?.data||n.message),l.value="Error loading video. Please try again."}}const Ce=S(()=>V.value.map(e=>({id:e.id,label:e.label,label_display:D(e.label),name:D(e.label),startTime:e.startTime,endTime:e.endTime,avgConfidence:e.avgConfidence,video_id:e.videoID,label_id:e.labelID})));function Ue(e,t){j(e,t)}return{currentVideo:$(a),errorMessage:$(l),videoUrl:$(b),segmentsByLabel:s,videoList:$(m),videoMeta:$(h),videos:ke,allSegments:V,draftSegment:$(X),activeSegment:ae,duration:I,hasVideo:Z,segments:Y,labels:ee,videoStreamUrl:Te,timelineSegments:Ce,hasRawVideoFile:$(w),buildVideoStreamUrl:N,setCurrentVideo:_e,clearVideo:ye,deleteVideo:ne,setVideo:Se,loadVideo:Ie,fetchVideoUrl:z,fetchAllSegments:x,fetchAllVideos:he,fetchVideoMeta:ce,fetchVideoSegments:k,fetchSegmentsByLabel:we,createSegment:De,patchSegmentLocally:Ue,updateSegment:Ee,deleteSegment:Ae,removeSegment:Ve,saveAnnotations:ge,uploadRevert:fe,uploadProcess:ve,getSegmentStyle:le,getColorForLabel:M,getTranslationForLabel:D,jumpToSegment:se,setActiveSegment:re,updateVideoStatus:pe,assignUserToVideo:be,updateSensitiveMeta:ue,clearVideoMeta:me,hasRawVideoFileFn:$e,startDraft:B,updateDraftEnd:K,commitDraft:W,cancelDraft:Fe,createFiveSecondSegment:Ne,formatTime:E,getSegmentOptions:ie,clearSegments:de}});export{E as f,D as g,qe as n,Ge as u};
